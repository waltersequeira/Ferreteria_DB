
package Vista;

import Controlador.CategoriaControlador;
import Modelo.Categoria;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import javax.swing.JTextField;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import java.awt.FileDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Pro650
 */
public class VistaCategorias extends javax.swing.JPanel {
    private final CategoriaControlador categoriaControlador;
    private Integer idCategoriaSeleccionada = null;
    

    /**
     * Creates new form VistaCategorias
     */
    public VistaCategorias() {
        initComponents();
         this.categoriaControlador = new CategoriaControlador();
        cargarDatosTablas();

    }
    
    private void cargarDatosTablas(){
          List<Categoria> categorias = categoriaControlador.obtenerTodasCategorias();
        
        if (categorias != null) {
            DefaultTableModel model = (DefaultTableModel) tablaCategorias.getModel();
            model.setRowCount(0);
            for (Categoria cat : categorias) {
                Object[] row = {
                    cat.getIdCategoria(),
                    cat.getNombreCategoria(),
                    cat.getDescripcionCategoria()
                };
                model.addRow(row);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textNombreCategoria = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCategorias = new javax.swing.JTable();
        textBuscar = new javax.swing.JTextField();
        textDescripcionCategoria = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnGenerarReporte = new javax.swing.JButton();

        jLabel1.setText("Nombre Categoria");

        textNombreCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNombreCategoriaActionPerformed(evt);
            }
        });

        jLabel2.setText("Descripcion Categoria");

        jLabel3.setText("Borrar");

        tablaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Categoria", "Nombre", "Descripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCategoriaMouseClicked(evt);
            }
        });
        tablaCategorias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBuscarKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCategorias);

        textBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBuscarActionPerformed(evt);
            }
        });
        textBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBuscarKeyTyped(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
                accionBotonGuardar(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
                accionBotonEliminar(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
                btnActualizaraccionBotonEliminar(evt);
                accionBotonActualizar(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        btnBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBuscarKeyRyped(evt);
            }
        });

        btnGenerarReporte.setText("Generar Reporte");
        btnGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonGenerarReporte(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(textNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(textDescripcionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                                        .addComponent(btnGenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDescripcionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar)
                    .addComponent(btnGenerarReporte))
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String nombre = textNombreCategoria.getText();
        String descripcion = textDescripcionCategoria.getText();
        
        if (!nombre.isEmpty()&& !descripcion.isEmpty()){
            categoriaControlador.crearCategoria(nombre, descripcion);
            cargarDatosTablas();
            textNombreCategoria.setText("");
            textDescripcionCategoria.setText("");
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void accionBotonEliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonEliminar
        int filaSeleccionada = tablaCategorias.getSelectedRow();
        if (filaSeleccionada != -1){
            int idCategoria = (int) tablaCategorias.getValueAt(filaSeleccionada, 0);
            categoriaControlador.eliminarCategoria(idCategoria);
            cargarDatosTablas();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonEliminar

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnActualizaraccionBotonEliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizaraccionBotonEliminar
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizaraccionBotonEliminar

    private void textNombreCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNombreCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNombreCategoriaActionPerformed

    private void tablaCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCategoriaMouseClicked
        if (evt.getClickCount()== 2){
            
            int filaSeleccionada = tablaCategorias.getSelectedRow();
            
            if (filaSeleccionada != -1) {
                
                idCategoriaSeleccionada = (int) tablaCategorias.getValueAt(filaSeleccionada, 0);
                String nombre = (String) tablaCategorias.getValueAt(filaSeleccionada, 1);
                String descripcion = (String) tablaCategorias.getValueAt(filaSeleccionada, 2);
                
                textNombreCategoria.setText(nombre);
                textDescripcionCategoria.setText(descripcion);
                
                btnEliminar.setEnabled(false);
                btnGuardar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tablaCategoriaMouseClicked

    private void accionBotonActualizar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonActualizar
         String nombre = textNombreCategoria.getText();
         String descripcion = textDescripcionCategoria.getText();
         
         if (idCategoriaSeleccionada != null && !descripcion.isEmpty()){
             
             categoriaControlador.actualizarCategoria(idCategoriaSeleccionada, nombre, descripcion);
             cargarDatosTablas();
             
             textNombreCategoria.setText("");
             textDescripcionCategoria.setText("");
             idCategoriaSeleccionada = null;
             
             btnEliminar.setEnabled(true);
             btnGuardar.setEnabled(true);
         } else {
             javax.swing.JOptionPane.showMessageDialog(this, "por favor, llene todos los campos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
         }
    }//GEN-LAST:event_accionBotonActualizar

    private void accionBotonGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonGuardar
        String nombre = textNombreCategoria.getText();
        String descripcion = textDescripcionCategoria.getText();
        
        if (!nombre.isEmpty()&& !descripcion.isEmpty()){
            categoriaControlador.crearCategoria(nombre, descripcion);
            cargarDatosTablas();
            textNombreCategoria.setText("");
            textDescripcionCategoria.setText("");
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "por favor, llene los campos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonGuardar

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void textBuscarKeyRyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBuscarKeyRyped

    }//GEN-LAST:event_textBuscarKeyRyped

    private void textBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBuscarKeyTyped

        String textoBusqueda = textBuscar.getText().trim().toLowerCase();
        List<Categoria> categorias = categoriaControlador.obtenerTodasCategorias();

        DefaultTableModel modelo = (DefaultTableModel) tablaCategorias.getModel();
        modelo.setRowCount(0);

        if (categorias != null) {
            for (Categoria cat : categorias) {
                if (textoBusqueda.isEmpty() ||
                    
                    cat.getNombreCategoria().toLowerCase().contains(textoBusqueda)||
                    cat.getDescripcionCategoria().toLowerCase().contains(textoBusqueda)) {
                        Object[] fila = {
                        cat.getIdCategoria(),
                        cat.getNombreCategoria(),
                        cat.getDescripcionCategoria()
                    };
                    modelo.addRow(fila);
                }

            }
        }

    }//GEN-LAST:event_textBuscarKeyTyped

    private void textBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textBuscarActionPerformed

    private void accionBotonGenerarReporte(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonGenerarReporte
       try {
    // Diálogo para guardar el archivo
    FileDialog dialogoArchivo = new FileDialog((java.awt.Frame) null, "Guardar Reporte PDF", FileDialog.SAVE);
    dialogoArchivo.setFile("ReporteCategorias.pdf");
    dialogoArchivo.setVisible(true);

    String ruta = dialogoArchivo.getDirectory();
    String nombreArchivo = dialogoArchivo.getFile();

    if (ruta == null || nombreArchivo == null) {
        JOptionPane.showMessageDialog(this, "Operación cancelada.", "Información", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    String rutaCompleta = ruta + nombreArchivo;

    // Crear el PDF
    PdfWriter escritor = new PdfWriter(rutaCompleta);
    PdfDocument pdf = new PdfDocument(escritor);
    Document documento = new Document(pdf);

    // Título del reporte
    documento.add(new Paragraph("Reporte de Categoría")
        .setTextAlignment(TextAlignment.CENTER)
        .setFontSize(20)
        .setBold());

    // Fecha
    documento.add(new Paragraph("Fecha: " + new java.util.Date().toString())
        .setTextAlignment(TextAlignment.CENTER)
        .setFontSize(12));

    // Tabla
    Table tabla = new Table(3);
    tabla.setWidth(UnitValue.createPercentValue(100));
    tabla.addHeaderCell(new Cell().add(new Paragraph("ID Categoría").setBold()));
    tabla.addHeaderCell(new Cell().add(new Paragraph("Nombre").setBold()));
    tabla.addHeaderCell(new Cell().add(new Paragraph("Descripción").setBold()));

    // Llenar datos de la tabla
    List<Categoria> listaCategorias = categoriaControlador.obtenerTodasCategorias();
    if (listaCategorias != null && !listaCategorias.isEmpty()) {
        for (Categoria categoria : listaCategorias) {
            tabla.addCell(String.valueOf(categoria.getIdCategoria()));
            tabla.addCell(categoria.getNombreCategoria()); // <- Asegúrate que este método existe
            tabla.addCell(categoria.getDescripcionCategoria());
        }
    } else {
        documento.add(new Paragraph("No hay categorías registradas.")
            .setTextAlignment(TextAlignment.CENTER)
            .setFontSize(12)
            .setItalic());
    }

    // Agregar tabla y notas
    documento.add(tabla);
    documento.add(new Paragraph("Notas: Reporte generado automáticamente desde el sistema.")
        .setFontSize(10)
        .setMarginTop(20));

    documento.close();

    // Confirmación
    JOptionPane.showMessageDialog(this,
        "Reporte PDF generado con éxito en: " + rutaCompleta,
        "Éxito", JOptionPane.INFORMATION_MESSAGE);

} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this,
        "Error al generar el PDF: " + e.getMessage(),
        "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_accionBotonGenerarReporte


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGenerarReporte;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCategorias;
    private javax.swing.JTextField textBuscar;
    private javax.swing.JTextField textDescripcionCategoria;
    private javax.swing.JTextField textNombreCategoria;
    // End of variables declaration//GEN-END:variables
}
